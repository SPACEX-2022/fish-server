# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: 腾讯云服务器
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9.15.4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
              
      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Build
        run: |
          npm run build

      - name: Compress files
        run: |
          tar -czvf dist.tar.gz ./dist/* ./ecosystem.config.js ./package.json ./pnpm-lock.yaml


      # 打印环境变量
      # - name: Print environment variables
      #   run: |
      #     echo "REMOTE_HOST: ${{ secrets.REMOTE_HOST }}"
      #     echo "REMOTE_USER: ${{ secrets.REMOTE_USER }}"
      #     echo "SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}"

      - name: Upload files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: dist.tar.gz
          target: /root/fish-server

      - name: Deploy
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/fish-server
            tar -xzvf dist.tar.gz --strip-components=1
            pnpm install --prod
            pm2 restart ecosystem.config.js
